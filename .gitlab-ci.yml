# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages: # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy
  - infra

build-backend: # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - chmod +x gradlew
    - ./gradlew build -x test
    - echo "Compile complete."

unit-test-backend: # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - chmod +x gradlew
    - ./gradlew test
  artifacts:
    when: always
    reports:
      junit: src/**/build/test-results/test/TEST-*.xml


deploy-backend: # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  only:
    refs:
      - develop
  script:
    - echo "Deploying application..."
    - chmod +x gradlew
    - ./gradlew build -x test
    - docker-compose stop faros-backend
    - docker-compose stop hl7-listener
    - docker-compose up -d --build faros-backend
    - docker-compose up -d --build hl7-listener
    - echo "Application successfully deployed."

up-rabbit:
  stage: infra
  rules:
    - when: manual
  script:
    - echo "Deploying rabbit..."
    - docker-compose up -d rabbitmq
stop-rabbit:
  stage: infra
  rules:
    - when: manual
  script:
    - echo "Deploying rabbit..."
    - docker-compose stop rabbitmq